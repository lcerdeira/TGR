{"ast":null,"code":"var _jsxFileName = \"/Users/lcer0001/GitHub/biodash/client/src/components/categories/Categories.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Row, Col } from 'react-materialize';\nimport { getCategories } from '../../actions/category';\nimport CategoryItem from './CategoryItem';\nimport CategoryFilter from './CategoryFilter';\nimport Loader from '../layout/Loader';\nimport Fab from '../layout/Fab';\n\nconst Categories = () => {\n  const category = useSelector(state => state.category);\n  const {\n    categories,\n    loading,\n    filtered\n  } = category;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getCategories());\n    document.title = 'Categories';\n  }, [dispatch]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CategoryFilter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), categories && !loading ? /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"grid-style\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, filtered ? filtered.map(item => /*#__PURE__*/React.createElement(CategoryItem, {\n    key: item._id,\n    category: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 19\n    }\n  })) : categories.map(item => /*#__PURE__*/React.createElement(CategoryItem, {\n    key: category._id,\n    category: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 19\n    }\n  })))) : /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"addcategory\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Categories;","map":{"version":3,"sources":["/Users/lcer0001/GitHub/biodash/client/src/components/categories/Categories.js"],"names":["React","useEffect","useDispatch","useSelector","Link","Row","Col","getCategories","CategoryItem","CategoryFilter","Loader","Fab","Categories","category","state","categories","loading","filtered","dispatch","document","title","map","item","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,mBAAzB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,GAAP,MAAgB,eAAhB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAMC,QAAQ,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACD,QAAlB,CAA5B;AACA,QAAM;AAAEE,IAAAA,UAAF;AAAcC,IAAAA,OAAd;AAAuBC,IAAAA;AAAvB,MAAoCJ,QAA1C;AAEA,QAAMK,QAAQ,GAAGhB,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,QAAQ,CAACX,aAAa,EAAd,CAAR;AACAY,IAAAA,QAAQ,CAACC,KAAT,GAAiB,YAAjB;AACD,GAHQ,EAGN,CAACF,QAAD,CAHM,CAAT;AAKA,sBACE,uDACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGH,UAAU,IAAI,CAACC,OAAf,gBACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,QAAQ,GACLA,QAAQ,CAACI,GAAT,CAAcC,IAAD,iBACX,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAxB;AAA6B,IAAA,QAAQ,EAAED,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADK,GAILP,UAAU,CAACM,GAAX,CAAgBC,IAAD,iBACb,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAET,QAAQ,CAACU,GAA5B;AAAiC,IAAA,QAAQ,EAAED,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALN,CADF,CADD,gBAaC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,eAiBE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAjBF,CADF;AAuBD,CAlCD;;AAoCA,eAAeV,UAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Row, Col } from 'react-materialize';\nimport { getCategories } from '../../actions/category';\nimport CategoryItem from './CategoryItem';\nimport CategoryFilter from './CategoryFilter';\nimport Loader from '../layout/Loader';\nimport Fab from '../layout/Fab';\n\nconst Categories = () => {\n  const category = useSelector((state) => state.category);\n  const { categories, loading, filtered } = category;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCategories());\n    document.title = 'Categories';\n  }, [dispatch]);\n\n  return (\n    <>\n      <CategoryFilter />\n      {categories && !loading ? (\n        <Row>\n          <Col className=\"grid-style\">\n            {filtered\n              ? filtered.map((item) => (\n                  <CategoryItem key={item._id} category={item} />\n                ))\n              : categories.map((item) => (\n                  <CategoryItem key={category._id} category={item} />\n                ))}\n          </Col>\n        </Row>\n      ) : (\n        <Loader />\n      )}\n      <Link to=\"addcategory\">\n        <Fab />\n      </Link>\n    </>\n  );\n};\n\nexport default Categories;\n"]},"metadata":{},"sourceType":"module"}