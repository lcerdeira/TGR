{"ast":null,"code":"import _regeneratorRuntime from\"/Users/lcer0001/GitHub/biodash/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/lcer0001/GitHub/biodash/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/lcer0001/GitHub/biodash/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import{get}from'axios';var useResources=function useResources(resource){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),resources=_useState2[0],setResources=_useState2[1];var fetchResource=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(resource){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return get(\"/api/\".concat(resource));case 2:response=_context.sent;setResources(response.data);case 4:case\"end\":return _context.stop();}}},_callee);}));return function fetchResource(_x){return _ref.apply(this,arguments);};}();useEffect(function(){fetchResource(resource);},[resource]);return resources;};export default useResources;","map":{"version":3,"sources":["/Users/lcer0001/GitHub/biodash/client/src/utils/useResources.js"],"names":["useState","useEffect","get","useResources","resource","resources","setResources","fetchResource","response","data"],"mappings":"idAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,GAAT,KAAoB,OAApB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,QAAD,CAAc,eACCJ,QAAQ,CAAC,EAAD,CADT,wCAC1BK,SAD0B,eACfC,YADe,eAGjC,GAAMC,CAAAA,aAAa,0FAAG,iBAAOH,QAAP,qJACGF,CAAAA,GAAG,gBAASE,QAAT,EADN,QACdI,QADc,eAEpBF,YAAY,CAACE,QAAQ,CAACC,IAAV,CAAZ,CAFoB,sDAAH,kBAAbF,CAAAA,aAAa,4CAAnB,CAKAN,SAAS,CAAC,UAAM,CACdM,aAAa,CAACH,QAAD,CAAb,CACD,CAFQ,CAEN,CAACA,QAAD,CAFM,CAAT,CAIA,MAAOC,CAAAA,SAAP,CACD,CAbD,CAeA,cAAeF,CAAAA,YAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport { get } from 'axios';\n\nconst useResources = (resource) => {\n  const [resources, setResources] = useState([]);\n\n  const fetchResource = async (resource) => {\n    const response = await get(`/api/${resource}`);\n    setResources(response.data);\n  };\n\n  useEffect(() => {\n    fetchResource(resource);\n  }, [resource]);\n\n  return resources;\n};\n\nexport default useResources;\n"]},"metadata":{},"sourceType":"module"}