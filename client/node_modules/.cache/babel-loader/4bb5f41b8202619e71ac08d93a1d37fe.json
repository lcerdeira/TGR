{"ast":null,"code":"var _jsxFileName = \"/Users/lcer0001/GitHub/biodash/client/src/components/locations/Locations.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Row, Col } from 'react-materialize';\nimport { getLocations } from '../../actions/location';\nimport LocationItem from './LocationItem';\nimport LocationFilter from './LocationFilter';\nimport Loader from '../layout/Loader';\nimport Fab from '../layout/Fab';\n\nconst Locations = () => {\n  const location = useSelector(state => state.location);\n  const {\n    locations,\n    loading,\n    filtered\n  } = location;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getLocations());\n    document.title = 'Locations';\n  }, [dispatch]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LocationFilter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), locations && !loading ? /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"grid-style\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, filtered ? filtered.map(item => /*#__PURE__*/React.createElement(LocationItem, {\n    key: item._id,\n    location: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 19\n    }\n  })) : locations.map(item => /*#__PURE__*/React.createElement(LocationItem, {\n    key: item._id,\n    location: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 19\n    }\n  })))) : /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"addlocation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Locations;","map":{"version":3,"sources":["/Users/lcer0001/GitHub/biodash/client/src/components/locations/Locations.js"],"names":["React","useEffect","useDispatch","useSelector","Link","Row","Col","getLocations","LocationItem","LocationFilter","Loader","Fab","Locations","location","state","locations","loading","filtered","dispatch","document","title","map","item","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,mBAAzB;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,GAAP,MAAgB,eAAhB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAMC,QAAQ,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACD,QAAlB,CAA5B;AACA,QAAM;AAAEE,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA;AAAtB,MAAmCJ,QAAzC;AAEA,QAAMK,QAAQ,GAAGhB,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,QAAQ,CAACX,YAAY,EAAb,CAAR;AACAY,IAAAA,QAAQ,CAACC,KAAT,GAAiB,WAAjB;AACD,GAHQ,EAGN,CAACF,QAAD,CAHM,CAAT;AAKA,sBACE,uDACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGH,SAAS,IAAI,CAACC,OAAd,gBACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,QAAQ,GACLA,QAAQ,CAACI,GAAT,CAAcC,IAAD,iBACX,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAxB;AAA6B,IAAA,QAAQ,EAAED,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADK,GAILP,SAAS,CAACM,GAAV,CAAeC,IAAD,iBACZ,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAxB;AAA6B,IAAA,QAAQ,EAAED,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALN,CADF,CADD,gBAaC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,eAiBE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAjBF,CADF;AAuBD,CAlCD;;AAoCA,eAAeV,SAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Row, Col } from 'react-materialize';\nimport { getLocations } from '../../actions/location';\nimport LocationItem from './LocationItem';\nimport LocationFilter from './LocationFilter';\nimport Loader from '../layout/Loader';\nimport Fab from '../layout/Fab';\n\nconst Locations = () => {\n  const location = useSelector((state) => state.location);\n  const { locations, loading, filtered } = location;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getLocations());\n    document.title = 'Locations';\n  }, [dispatch]);\n\n  return (\n    <>\n      <LocationFilter />\n      {locations && !loading ? (\n        <Row>\n          <Col className=\"grid-style\">\n            {filtered\n              ? filtered.map((item) => (\n                  <LocationItem key={item._id} location={item} />\n                ))\n              : locations.map((item) => (\n                  <LocationItem key={item._id} location={item} />\n                ))}\n          </Col>\n        </Row>\n      ) : (\n        <Loader />\n      )}\n      <Link to=\"addlocation\">\n        <Fab />\n      </Link>\n    </>\n  );\n};\n\nexport default Locations;\n"]},"metadata":{},"sourceType":"module"}