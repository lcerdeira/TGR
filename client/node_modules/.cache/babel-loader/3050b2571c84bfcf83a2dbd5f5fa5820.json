{"ast":null,"code":"import _toConsumableArray from\"/Users/lcer0001/GitHub/biodash/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/lcer0001/GitHub/biodash/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{GET_PLACES,SET_LOADING,PLACES_ERROR,ADD_PLACE,DELETE_PLACE,UPDATE_PLACE,CURRENT_PLACE,CLEAR_CURRENT,FILTER_PLACES,CLEAR_FILTER}from'../actions/types';var initialState={places:null,current:null,loading:false,filtered:null,error:null};export default function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;var type=action.type,payload=action.payload;switch(type){case GET_PLACES:return _objectSpread(_objectSpread({},state),{},{places:payload,loading:false});case ADD_PLACE:return _objectSpread(_objectSpread({},state),{},{places:[].concat(_toConsumableArray(state.places),[payload]),loading:false});case UPDATE_PLACE:return _objectSpread(_objectSpread({},state),{},{places:state.places.map(function(place){return place._id===payload._id?payload:place;}),loading:false});case DELETE_PLACE:return _objectSpread(_objectSpread({},state),{},{places:state.places.filter(function(place){return place._id!==payload;}),loading:false});case FILTER_PLACES:return _objectSpread(_objectSpread({},state),{},{filtered:state.places.filter(function(place){var regex=new RegExp(\"\".concat(action.payload),'gi');return place.title.match(regex);})});case CLEAR_FILTER:return _objectSpread(_objectSpread({},state),{},{filtered:null});case CURRENT_PLACE:return _objectSpread(_objectSpread({},state),{},{current:payload});case CLEAR_CURRENT:return _objectSpread(_objectSpread({},state),{},{current:null});case SET_LOADING:return _objectSpread(_objectSpread({},state),{},{loading:true});case PLACES_ERROR:console.error(payload);return _objectSpread(_objectSpread({},state),{},{error:payload});default:return state;}}","map":{"version":3,"sources":["/Users/lcer0001/GitHub/biodash/client/src/reducers/place.js"],"names":["GET_PLACES","SET_LOADING","PLACES_ERROR","ADD_PLACE","DELETE_PLACE","UPDATE_PLACE","CURRENT_PLACE","CLEAR_CURRENT","FILTER_PLACES","CLEAR_FILTER","initialState","places","current","loading","filtered","error","state","action","type","payload","map","place","_id","filter","regex","RegExp","title","match","console"],"mappings":"+TAAA,OACEA,UADF,CAEEC,WAFF,CAGEC,YAHF,CAIEC,SAJF,CAKEC,YALF,CAMEC,YANF,CAOEC,aAPF,CAQEC,aARF,CASEC,aATF,CAUEC,YAVF,KAWO,kBAXP,CAaA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,MAAM,CAAE,IADW,CAEnBC,OAAO,CAAE,IAFU,CAGnBC,OAAO,CAAE,KAHU,CAInBC,QAAQ,CAAE,IAJS,CAKnBC,KAAK,CAAE,IALY,CAArB,CAQA,cAAe,WAAwC,IAA9BC,CAAAA,KAA8B,2DAAtBN,YAAsB,IAARO,CAAAA,MAAQ,8CAC7CC,CAAAA,IAD6C,CAC3BD,MAD2B,CAC7CC,IAD6C,CACvCC,OADuC,CAC3BF,MAD2B,CACvCE,OADuC,CAGrD,OAAQD,IAAR,EACE,IAAKlB,CAAAA,UAAL,CACE,sCAAYgB,KAAZ,MAAmBL,MAAM,CAAEQ,OAA3B,CAAoCN,OAAO,CAAE,KAA7C,GACF,IAAKV,CAAAA,SAAL,CACE,sCACKa,KADL,MAEEL,MAAM,8BAAMK,KAAK,CAACL,MAAZ,GAAoBQ,OAApB,EAFR,CAGEN,OAAO,CAAE,KAHX,GAKF,IAAKR,CAAAA,YAAL,CACE,sCACKW,KADL,MAEEL,MAAM,CAAEK,KAAK,CAACL,MAAN,CAAaS,GAAb,CAAiB,SAACC,KAAD,QACvBA,CAAAA,KAAK,CAACC,GAAN,GAAcH,OAAO,CAACG,GAAtB,CAA4BH,OAA5B,CAAsCE,KADf,EAAjB,CAFV,CAKER,OAAO,CAAE,KALX,GAOF,IAAKT,CAAAA,YAAL,CACE,sCACKY,KADL,MAEEL,MAAM,CAAEK,KAAK,CAACL,MAAN,CAAaY,MAAb,CAAoB,SAACF,KAAD,QAAWA,CAAAA,KAAK,CAACC,GAAN,GAAcH,OAAzB,EAApB,CAFV,CAGEN,OAAO,CAAE,KAHX,GAKF,IAAKL,CAAAA,aAAL,CACE,sCACKQ,KADL,MAEEF,QAAQ,CAAEE,KAAK,CAACL,MAAN,CAAaY,MAAb,CAAoB,SAACF,KAAD,CAAW,CACvC,GAAMG,CAAAA,KAAK,CAAG,GAAIC,CAAAA,MAAJ,WAAcR,MAAM,CAACE,OAArB,EAAgC,IAAhC,CAAd,CACA,MAAOE,CAAAA,KAAK,CAACK,KAAN,CAAYC,KAAZ,CAAkBH,KAAlB,CAAP,CACD,CAHS,CAFZ,GAOF,IAAKf,CAAAA,YAAL,CACE,sCACKO,KADL,MAEEF,QAAQ,CAAE,IAFZ,GAIF,IAAKR,CAAAA,aAAL,CACE,sCAAYU,KAAZ,MAAmBJ,OAAO,CAAEO,OAA5B,GACF,IAAKZ,CAAAA,aAAL,CACE,sCAAYS,KAAZ,MAAmBJ,OAAO,CAAE,IAA5B,GACF,IAAKX,CAAAA,WAAL,CACE,sCAAYe,KAAZ,MAAmBH,OAAO,CAAE,IAA5B,GACF,IAAKX,CAAAA,YAAL,CACE0B,OAAO,CAACb,KAAR,CAAcI,OAAd,EACA,sCACKH,KADL,MAEED,KAAK,CAAEI,OAFT,GAIF,QACE,MAAOH,CAAAA,KAAP,CAjDJ,CAmDD","sourcesContent":["import {\n  GET_PLACES,\n  SET_LOADING,\n  PLACES_ERROR,\n  ADD_PLACE,\n  DELETE_PLACE,\n  UPDATE_PLACE,\n  CURRENT_PLACE,\n  CLEAR_CURRENT,\n  FILTER_PLACES,\n  CLEAR_FILTER\n} from '../actions/types';\n\nconst initialState = {\n  places: null,\n  current: null,\n  loading: false,\n  filtered: null,\n  error: null\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_PLACES:\n      return { ...state, places: payload, loading: false };\n    case ADD_PLACE:\n      return {\n        ...state,\n        places: [...state.places, payload],\n        loading: false\n      };\n    case UPDATE_PLACE:\n      return {\n        ...state,\n        places: state.places.map((place) =>\n          place._id === payload._id ? payload : place\n        ),\n        loading: false\n      };\n    case DELETE_PLACE:\n      return {\n        ...state,\n        places: state.places.filter((place) => place._id !== payload),\n        loading: false\n      };\n    case FILTER_PLACES:\n      return {\n        ...state,\n        filtered: state.places.filter((place) => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return place.title.match(regex);\n        })\n      };\n    case CLEAR_FILTER:\n      return {\n        ...state,\n        filtered: null\n      };\n    case CURRENT_PLACE:\n      return { ...state, current: payload };\n    case CLEAR_CURRENT:\n      return { ...state, current: null };\n    case SET_LOADING:\n      return { ...state, loading: true };\n    case PLACES_ERROR:\n      console.error(payload);\n      return {\n        ...state,\n        error: payload\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}