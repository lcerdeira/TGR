{"ast":null,"code":"import axios from 'axios';\nimport { GET_LOCATIONS, SET_LOADING, LOCATIONS_ERROR, ADD_LOCATION, DELETE_LOCATION, UPDATE_LOCATION, CURRENT_LOCATION, CLEAR_CURRENT, FILTER_LOCATIONS, CLEAR_FILTER } from './types'; // Set loading to true\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n}; // Get locations\n\nexport const getLocations = () => async dispatch => {\n  try {\n    setLoading();\n    const res = await axios.get('/api/locations');\n    const data = await res.data;\n    dispatch({\n      type: GET_LOCATIONS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOCATIONS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; // Add location\n\nexport const addLocation = location => async dispatch => {\n  try {\n    setLoading();\n    const res = await axios.post('/api/locations', location);\n    const data = await res.data;\n    dispatch({\n      type: ADD_LOCATION,\n      payload: data\n    });\n  } catch (err) {\n    console.location(err);\n    dispatch({\n      type: LOCATIONS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; // Update location\n\nexport const updateLocation = location => async dispatch => {\n  try {\n    setLoading();\n    const res = await axios.patch(`/api/locations/${location._id}`, location);\n    const data = await res.data;\n    dispatch({\n      type: UPDATE_LOCATION,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOCATIONS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; // Delete location\n\nexport const deleteLocation = id => async dispatch => {\n  try {\n    setLoading();\n    await axios.delete(`/api/locations/${id}`);\n    dispatch({\n      type: DELETE_LOCATION,\n      payload: id\n    });\n  } catch (err) {\n    dispatch({\n      type: LOCATIONS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; // Set current location\n\nexport const setCurrent = location => {\n  return {\n    type: CURRENT_LOCATION,\n    payload: location\n  };\n}; // Clear current location\n\nexport const clearCurrent = () => {\n  return {\n    type: CLEAR_CURRENT\n  };\n}; // Filter\n\nexport const filterLocations = text => {\n  return {\n    type: FILTER_LOCATIONS,\n    payload: text\n  };\n}; // Clear Filter\n\nexport const clearFilter = () => {\n  return {\n    type: CLEAR_FILTER\n  };\n};","map":{"version":3,"sources":["/Users/lcer0001/GitHub/biodash/client/src/actions/location.js"],"names":["axios","GET_LOCATIONS","SET_LOADING","LOCATIONS_ERROR","ADD_LOCATION","DELETE_LOCATION","UPDATE_LOCATION","CURRENT_LOCATION","CLEAR_CURRENT","FILTER_LOCATIONS","CLEAR_FILTER","setLoading","type","getLocations","dispatch","res","get","data","payload","err","response","statusText","addLocation","location","post","console","updateLocation","patch","_id","deleteLocation","id","delete","setCurrent","clearCurrent","filterLocations","text","clearFilter"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {\n  GET_LOCATIONS,\n  SET_LOADING,\n  LOCATIONS_ERROR,\n  ADD_LOCATION,\n  DELETE_LOCATION,\n  UPDATE_LOCATION,\n  CURRENT_LOCATION,\n  CLEAR_CURRENT,\n  FILTER_LOCATIONS,\n  CLEAR_FILTER\n} from './types';\n\n// Set loading to true\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};\n\n// Get locations\nexport const getLocations = () => async (dispatch) => {\n  try {\n    setLoading();\n    const res = await axios.get('/api/locations');\n    const data = await res.data;\n    dispatch({\n      type: GET_LOCATIONS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOCATIONS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\n\n// Add location\nexport const addLocation = (location) => async (dispatch) => {\n  try {\n    setLoading();\n    const res = await axios.post('/api/locations', location);\n    const data = await res.data;\n    dispatch({\n      type: ADD_LOCATION,\n      payload: data\n    });\n  } catch (err) {\n    console.location(err);\n    dispatch({\n      type: LOCATIONS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\n\n// Update location\nexport const updateLocation = (location) => async (dispatch) => {\n  try {\n    setLoading();\n    const res = await axios.patch(`/api/locations/${location._id}`, location);\n    const data = await res.data;\n    dispatch({\n      type: UPDATE_LOCATION,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOCATIONS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\n\n// Delete location\nexport const deleteLocation = (id) => async (dispatch) => {\n  try {\n    setLoading();\n    await axios.delete(`/api/locations/${id}`);\n    dispatch({\n      type: DELETE_LOCATION,\n      payload: id\n    });\n  } catch (err) {\n    dispatch({\n      type: LOCATIONS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\n\n// Set current location\nexport const setCurrent = (location) => {\n  return {\n    type: CURRENT_LOCATION,\n    payload: location\n  };\n};\n\n// Clear current location\nexport const clearCurrent = () => {\n  return {\n    type: CLEAR_CURRENT\n  };\n};\n\n// Filter\nexport const filterLocations = (text) => {\n  return { type: FILTER_LOCATIONS, payload: text };\n};\n\n// Clear Filter\nexport const clearFilter = () => {\n  return { type: CLEAR_FILTER };\n};\n"]},"metadata":{},"sourceType":"module"}