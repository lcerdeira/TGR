{"ast":null,"code":"var _jsxFileName = \"/Users/lcer0001/GitHub/biodash/client/src/components/places/Places.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Row, Col } from 'react-materialize';\nimport { getPlaces } from '../../actions/place';\nimport PlaceItem from './PlaceItem';\nimport PlaceFilter from './PlaceFilter';\nimport Loader from '../layout/Loader';\nimport Fab from '../layout/Fab';\n\nconst Places = () => {\n  const place = useSelector(state => state.place);\n  const {\n    places,\n    loading,\n    filtered\n  } = place;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getPlaces());\n    document.title = 'Places';\n  }, [dispatch]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PlaceFilter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), places && !loading ? /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"grid-style\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, filtered ? filtered.map(place => /*#__PURE__*/React.createElement(PlaceItem, {\n    key: place._id,\n    place: place,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 19\n    }\n  })) : places.map(place => /*#__PURE__*/React.createElement(PlaceItem, {\n    key: place._id,\n    place: place,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 19\n    }\n  })))) : /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"addplace\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Places;","map":{"version":3,"sources":["/Users/lcer0001/GitHub/biodash/client/src/components/places/Places.js"],"names":["React","useEffect","useDispatch","useSelector","Link","Row","Col","getPlaces","PlaceItem","PlaceFilter","Loader","Fab","Places","place","state","places","loading","filtered","dispatch","document","title","map","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,mBAAzB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,GAAP,MAAgB,eAAhB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,KAAK,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACD,KAAlB,CAAzB;AACA,QAAM;AAAEE,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA;AAAnB,MAAgCJ,KAAtC;AAEA,QAAMK,QAAQ,GAAGhB,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,QAAQ,CAACX,SAAS,EAAV,CAAR;AACAY,IAAAA,QAAQ,CAACC,KAAT,GAAiB,QAAjB;AACD,GAHQ,EAGN,CAACF,QAAD,CAHM,CAAT;AAKA,sBACE,uDACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGH,MAAM,IAAI,CAACC,OAAX,gBACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,QAAQ,GACLA,QAAQ,CAACI,GAAT,CAAcR,KAAD,iBACX,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,KAAK,CAACS,GAAtB;AAA2B,IAAA,KAAK,EAAET,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADK,GAILE,MAAM,CAACM,GAAP,CAAYR,KAAD,iBACT,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,KAAK,CAACS,GAAtB;AAA2B,IAAA,KAAK,EAAET,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALN,CADF,CADD,gBAaC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,eAiBE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAjBF,CADF;AAuBD,CAlCD;;AAoCA,eAAeD,MAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Row, Col } from 'react-materialize';\nimport { getPlaces } from '../../actions/place';\nimport PlaceItem from './PlaceItem';\nimport PlaceFilter from './PlaceFilter';\nimport Loader from '../layout/Loader';\nimport Fab from '../layout/Fab';\n\nconst Places = () => {\n  const place = useSelector((state) => state.place);\n  const { places, loading, filtered } = place;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getPlaces());\n    document.title = 'Places';\n  }, [dispatch]);\n\n  return (\n    <>\n      <PlaceFilter />\n      {places && !loading ? (\n        <Row>\n          <Col className=\"grid-style\">\n            {filtered\n              ? filtered.map((place) => (\n                  <PlaceItem key={place._id} place={place} />\n                ))\n              : places.map((place) => (\n                  <PlaceItem key={place._id} place={place} />\n                ))}\n          </Col>\n        </Row>\n      ) : (\n        <Loader />\n      )}\n      <Link to=\"addplace\">\n        <Fab />\n      </Link>\n    </>\n  );\n};\n\nexport default Places;\n"]},"metadata":{},"sourceType":"module"}