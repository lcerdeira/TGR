{"ast":null,"code":"import _regeneratorRuntime from\"/Users/lcer0001/GitHub/biodash/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/lcer0001/GitHub/biodash/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';import{GET_CATEGORIES,SET_LOADING,CATEGORIES_ERROR,ADD_CATEGORY,DELETE_CATEGORY,UPDATE_CATEGORY,CURRENT_CATEGORY,CLEAR_CURRENT,FILTER_CATEGORIES,CLEAR_FILTER}from'./types';// Set loading to true\nexport var setLoading=function setLoading(){return{type:SET_LOADING};};// Get categories\nexport var getCategories=function getCategories(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var res,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;setLoading();_context.next=4;return axios.get('/api/categories');case 4:res=_context.sent;_context.next=7;return res.data;case 7:data=_context.sent;dispatch({type:GET_CATEGORIES,payload:data});_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);dispatch({type:CATEGORIES_ERROR,payload:_context.t0.response.statusText});case 14:case\"end\":return _context.stop();}}},_callee,null,[[0,11]]);}));return function(_x){return _ref.apply(this,arguments);};}();};// Add category\nexport var addCategory=function addCategory(category){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var res,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;setLoading();_context2.next=4;return axios.post('/api/categories',category);case 4:res=_context2.sent;_context2.next=7;return res.data;case 7:data=_context2.sent;dispatch({type:ADD_CATEGORY,payload:data});_context2.next=15;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](0);console.category(_context2.t0);dispatch({type:CATEGORIES_ERROR,payload:_context2.t0.response.statusText});case 15:case\"end\":return _context2.stop();}}},_callee2,null,[[0,11]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};// Update category\nexport var updateCategory=function updateCategory(category){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var res,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;setLoading();_context3.next=4;return axios.patch(\"/api/categories/\".concat(category._id),category);case 4:res=_context3.sent;_context3.next=7;return res.data;case 7:data=_context3.sent;dispatch({type:UPDATE_CATEGORY,payload:data});_context3.next=14;break;case 11:_context3.prev=11;_context3.t0=_context3[\"catch\"](0);dispatch({type:CATEGORIES_ERROR,payload:_context3.t0.response.statusText});case 14:case\"end\":return _context3.stop();}}},_callee3,null,[[0,11]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};// Delete category\nexport var deleteCategory=function deleteCategory(id){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;setLoading();_context4.next=4;return axios.delete(\"/api/categories/\".concat(id));case 4:dispatch({type:DELETE_CATEGORY,payload:id});_context4.next=10;break;case 7:_context4.prev=7;_context4.t0=_context4[\"catch\"](0);dispatch({type:CATEGORIES_ERROR,payload:_context4.t0.response.statusText});case 10:case\"end\":return _context4.stop();}}},_callee4,null,[[0,7]]);}));return function(_x4){return _ref4.apply(this,arguments);};}();};// Set current category\nexport var setCurrent=function setCurrent(category){return{type:CURRENT_CATEGORY,payload:category};};// Clear current category\nexport var clearCurrent=function clearCurrent(){return{type:CLEAR_CURRENT};};// Filter\nexport var filterCategories=function filterCategories(text){return{type:FILTER_CATEGORIES,payload:text};};// Clear Filter\nexport var clearFilter=function clearFilter(){return{type:CLEAR_FILTER};};","map":{"version":3,"sources":["/Users/lcer0001/GitHub/biodash/client/src/actions/category.js"],"names":["axios","GET_CATEGORIES","SET_LOADING","CATEGORIES_ERROR","ADD_CATEGORY","DELETE_CATEGORY","UPDATE_CATEGORY","CURRENT_CATEGORY","CLEAR_CURRENT","FILTER_CATEGORIES","CLEAR_FILTER","setLoading","type","getCategories","dispatch","get","res","data","payload","response","statusText","addCategory","category","post","console","updateCategory","patch","_id","deleteCategory","id","delete","setCurrent","clearCurrent","filterCategories","text","clearFilter"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {\n  GET_CATEGORIES,\n  SET_LOADING,\n  CATEGORIES_ERROR,\n  ADD_CATEGORY,\n  DELETE_CATEGORY,\n  UPDATE_CATEGORY,\n  CURRENT_CATEGORY,\n  CLEAR_CURRENT,\n  FILTER_CATEGORIES,\n  CLEAR_FILTER\n} from './types';\n\n// Set loading to true\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};\n\n// Get categories\nexport const getCategories = () => async (dispatch) => {\n  try {\n    setLoading();\n    const res = await axios.get('/api/categories');\n    const data = await res.data;\n    dispatch({\n      type: GET_CATEGORIES,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: CATEGORIES_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\n\n// Add category\nexport const addCategory = (category) => async (dispatch) => {\n  try {\n    setLoading();\n    const res = await axios.post('/api/categories', category);\n    const data = await res.data;\n    dispatch({\n      type: ADD_CATEGORY,\n      payload: data\n    });\n  } catch (err) {\n    console.category(err);\n    dispatch({\n      type: CATEGORIES_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\n\n// Update category\nexport const updateCategory = (category) => async (dispatch) => {\n  try {\n    setLoading();\n    const res = await axios.patch(`/api/categories/${category._id}`, category);\n    const data = await res.data;\n    dispatch({\n      type: UPDATE_CATEGORY,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: CATEGORIES_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\n\n// Delete category\nexport const deleteCategory = (id) => async (dispatch) => {\n  try {\n    setLoading();\n    await axios.delete(`/api/categories/${id}`);\n    dispatch({\n      type: DELETE_CATEGORY,\n      payload: id\n    });\n  } catch (err) {\n    dispatch({\n      type: CATEGORIES_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\n\n// Set current category\nexport const setCurrent = (category) => {\n  return {\n    type: CURRENT_CATEGORY,\n    payload: category\n  };\n};\n\n// Clear current category\nexport const clearCurrent = () => {\n  return {\n    type: CLEAR_CURRENT\n  };\n};\n\n// Filter\nexport const filterCategories = (text) => {\n  return { type: FILTER_CATEGORIES, payload: text };\n};\n\n// Clear Filter\nexport const clearFilter = () => {\n  return { type: CLEAR_FILTER };\n};\n"]},"metadata":{},"sourceType":"module"}