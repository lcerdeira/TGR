{"ast":null,"code":"import _toConsumableArray from\"/Users/lcer0001/GitHub/biodash/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/lcer0001/GitHub/biodash/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{GET_LOCATIONS,SET_LOADING,LOCATIONS_ERROR,ADD_LOCATION,DELETE_LOCATION,UPDATE_LOCATION,CURRENT_LOCATION,CLEAR_CURRENT,FILTER_LOCATIONS,CLEAR_FILTER}from'../actions/types';var initialState={locations:null,current:null,loading:false,filtered:null,error:null};export default function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;var type=action.type,payload=action.payload;switch(type){case GET_LOCATIONS:return _objectSpread(_objectSpread({},state),{},{locations:payload,loading:false});case ADD_LOCATION:return _objectSpread(_objectSpread({},state),{},{locations:[].concat(_toConsumableArray(state.locations),[payload]),loading:false});case UPDATE_LOCATION:return _objectSpread(_objectSpread({},state),{},{locations:state.locations.map(function(location){return location._id===payload._id?payload:location;}),loading:false});case DELETE_LOCATION:return _objectSpread(_objectSpread({},state),{},{locations:state.locations.filter(function(location){return location._id!==payload;}),loading:false});case FILTER_LOCATIONS:return _objectSpread(_objectSpread({},state),{},{filtered:state.locations.filter(function(location){var regex=new RegExp(\"\".concat(action.payload),'gi');return location.title.match(regex);})});case CLEAR_FILTER:return _objectSpread(_objectSpread({},state),{},{filtered:null});case CURRENT_LOCATION:return _objectSpread(_objectSpread({},state),{},{current:payload});case CLEAR_CURRENT:return _objectSpread(_objectSpread({},state),{},{current:null});case SET_LOADING:return _objectSpread(_objectSpread({},state),{},{loading:true});case LOCATIONS_ERROR:console.error(payload);return _objectSpread(_objectSpread({},state),{},{error:payload});default:return state;}}","map":{"version":3,"sources":["/Users/lcer0001/GitHub/biodash/client/src/reducers/location.js"],"names":["GET_LOCATIONS","SET_LOADING","LOCATIONS_ERROR","ADD_LOCATION","DELETE_LOCATION","UPDATE_LOCATION","CURRENT_LOCATION","CLEAR_CURRENT","FILTER_LOCATIONS","CLEAR_FILTER","initialState","locations","current","loading","filtered","error","state","action","type","payload","map","location","_id","filter","regex","RegExp","title","match","console"],"mappings":"+TAAA,OACEA,aADF,CAEEC,WAFF,CAGEC,eAHF,CAIEC,YAJF,CAKEC,eALF,CAMEC,eANF,CAOEC,gBAPF,CAQEC,aARF,CASEC,gBATF,CAUEC,YAVF,KAWO,kBAXP,CAaA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,SAAS,CAAE,IADQ,CAEnBC,OAAO,CAAE,IAFU,CAGnBC,OAAO,CAAE,KAHU,CAInBC,QAAQ,CAAE,IAJS,CAKnBC,KAAK,CAAE,IALY,CAArB,CAQA,cAAe,WAAwC,IAA9BC,CAAAA,KAA8B,2DAAtBN,YAAsB,IAARO,CAAAA,MAAQ,8CAC7CC,CAAAA,IAD6C,CAC3BD,MAD2B,CAC7CC,IAD6C,CACvCC,OADuC,CAC3BF,MAD2B,CACvCE,OADuC,CAGrD,OAAQD,IAAR,EACE,IAAKlB,CAAAA,aAAL,CACE,sCAAYgB,KAAZ,MAAmBL,SAAS,CAAEQ,OAA9B,CAAuCN,OAAO,CAAE,KAAhD,GACF,IAAKV,CAAAA,YAAL,CACE,sCACKa,KADL,MAEEL,SAAS,8BAAMK,KAAK,CAACL,SAAZ,GAAuBQ,OAAvB,EAFX,CAGEN,OAAO,CAAE,KAHX,GAKF,IAAKR,CAAAA,eAAL,CACE,sCACKW,KADL,MAEEL,SAAS,CAAEK,KAAK,CAACL,SAAN,CAAgBS,GAAhB,CAAoB,SAACC,QAAD,QAC7BA,CAAAA,QAAQ,CAACC,GAAT,GAAiBH,OAAO,CAACG,GAAzB,CAA+BH,OAA/B,CAAyCE,QADZ,EAApB,CAFb,CAKER,OAAO,CAAE,KALX,GAOF,IAAKT,CAAAA,eAAL,CACE,sCACKY,KADL,MAEEL,SAAS,CAAEK,KAAK,CAACL,SAAN,CAAgBY,MAAhB,CACT,SAACF,QAAD,QAAcA,CAAAA,QAAQ,CAACC,GAAT,GAAiBH,OAA/B,EADS,CAFb,CAKEN,OAAO,CAAE,KALX,GAOF,IAAKL,CAAAA,gBAAL,CACE,sCACKQ,KADL,MAEEF,QAAQ,CAAEE,KAAK,CAACL,SAAN,CAAgBY,MAAhB,CAAuB,SAACF,QAAD,CAAc,CAC7C,GAAMG,CAAAA,KAAK,CAAG,GAAIC,CAAAA,MAAJ,WAAcR,MAAM,CAACE,OAArB,EAAgC,IAAhC,CAAd,CACA,MAAOE,CAAAA,QAAQ,CAACK,KAAT,CAAeC,KAAf,CAAqBH,KAArB,CAAP,CACD,CAHS,CAFZ,GAOF,IAAKf,CAAAA,YAAL,CACE,sCACKO,KADL,MAEEF,QAAQ,CAAE,IAFZ,GAIF,IAAKR,CAAAA,gBAAL,CACE,sCAAYU,KAAZ,MAAmBJ,OAAO,CAAEO,OAA5B,GACF,IAAKZ,CAAAA,aAAL,CACE,sCAAYS,KAAZ,MAAmBJ,OAAO,CAAE,IAA5B,GACF,IAAKX,CAAAA,WAAL,CACE,sCAAYe,KAAZ,MAAmBH,OAAO,CAAE,IAA5B,GACF,IAAKX,CAAAA,eAAL,CACE0B,OAAO,CAACb,KAAR,CAAcI,OAAd,EACA,sCACKH,KADL,MAEED,KAAK,CAAEI,OAFT,GAIF,QACE,MAAOH,CAAAA,KAAP,CAnDJ,CAqDD","sourcesContent":["import {\n  GET_LOCATIONS,\n  SET_LOADING,\n  LOCATIONS_ERROR,\n  ADD_LOCATION,\n  DELETE_LOCATION,\n  UPDATE_LOCATION,\n  CURRENT_LOCATION,\n  CLEAR_CURRENT,\n  FILTER_LOCATIONS,\n  CLEAR_FILTER\n} from '../actions/types';\n\nconst initialState = {\n  locations: null,\n  current: null,\n  loading: false,\n  filtered: null,\n  error: null\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_LOCATIONS:\n      return { ...state, locations: payload, loading: false };\n    case ADD_LOCATION:\n      return {\n        ...state,\n        locations: [...state.locations, payload],\n        loading: false\n      };\n    case UPDATE_LOCATION:\n      return {\n        ...state,\n        locations: state.locations.map((location) =>\n          location._id === payload._id ? payload : location\n        ),\n        loading: false\n      };\n    case DELETE_LOCATION:\n      return {\n        ...state,\n        locations: state.locations.filter(\n          (location) => location._id !== payload\n        ),\n        loading: false\n      };\n    case FILTER_LOCATIONS:\n      return {\n        ...state,\n        filtered: state.locations.filter((location) => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return location.title.match(regex);\n        })\n      };\n    case CLEAR_FILTER:\n      return {\n        ...state,\n        filtered: null\n      };\n    case CURRENT_LOCATION:\n      return { ...state, current: payload };\n    case CLEAR_CURRENT:\n      return { ...state, current: null };\n    case SET_LOADING:\n      return { ...state, loading: true };\n    case LOCATIONS_ERROR:\n      console.error(payload);\n      return {\n        ...state,\n        error: payload\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}