var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import React from "react";
import LazyLoad from "react-lazyload";
import PropTypes from "prop-types";
import { Transition } from "react-transition-group";

var getStyle = function getStyle(_ref) {
    var duration = _ref.duration,
        _ref$easing = _ref.easing,
        easing = _ref$easing === undefined ? 'ease-in-out' : _ref$easing;
    return {
        transition: "opacity " + duration + "ms " + easing,
        opacity: 0,
        display: 'inline-block'
    };
};

var transitionStyles = {
    entering: { opacity: 0 },
    entered: { opacity: 1 }
};

var FadeIn = function (_React$Component) {
    _inherits(FadeIn, _React$Component);

    function FadeIn() {
        var _temp, _this, _ret;

        _classCallCheck(this, FadeIn);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
            loaded: false
        }, _this.onLoad = function () {
            return _this.setState({ loaded: true });
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    FadeIn.prototype.render = function render() {
        var _this2 = this;

        var _props = this.props,
            height = _props.height,
            _props$duration = _props.duration,
            duration = _props$duration === undefined ? 500 : _props$duration,
            easing = _props.easing,
            children = _props.children,
            render = _props.render,
            offset = _props.offset,
            restProps = _objectWithoutProperties(_props, ["height", "duration", "easing", "children", "render", "offset"]),
            loaded = this.state.loaded;

        return React.createElement(
            LazyLoad,
            _extends({
                height: height,
                offset: typeof offset === "undefined" ? 150 : offset
            }, restProps),
            React.createElement(
                Transition,
                { "in": loaded, timeout: duration },
                function (state) {
                    return React.createElement(
                        "div",
                        {
                            style: _extends({}, getStyle({ duration: duration, easing: easing }), transitionStyles[state])
                        },
                        children && children(_this2.onLoad),
                        render && render(_this2.onLoad)
                    );
                }
            )
        );
    };

    return FadeIn;
}(React.Component);

FadeIn.propTypes = process.env.NODE_ENV !== "production" ? {
    height: PropTypes.number,
    duration: PropTypes.number,
    easing: PropTypes.string,
    children: PropTypes.func,
    render: PropTypes.func
} : {};

export { FadeIn };
export default FadeIn;